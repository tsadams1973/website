<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on iconic sections</title>
    <link>https://timblog.z19.web.core.windows.net/posts/</link>
    <description>Recent content in Posts on iconic sections</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Nov 2019 16:12:33 -0500</lastBuildDate>
    
	<atom:link href="https://timblog.z19.web.core.windows.net/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Power BI</title>
      <link>https://timblog.z19.web.core.windows.net/posts/intro-power-bi/</link>
      <pubDate>Thu, 14 Nov 2019 16:12:33 -0500</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/intro-power-bi/</guid>
      <description>To learn more about Power BI, I decided to work through some of the content from the Create and use analytics reports with Power BI learning path from Microsoft&amp;rsquo;s (Learn platform)[https://docs.microsoft.com/en-us/learn/]. These are my notes and takeaways from those modules.
Power BI consists of three elements:
 Power BI Desktop - a Microsoft Windows desktop application Power BI Service - a SaaS service Power BI Apps - apps available on mobile devices  The general workflow of Power BI would involve creating a report using the Power BI Desktop, publishing it to the Power BI service, and sharing it so users can consume it using a Power BI Mobile App.</description>
    </item>
    
    <item>
      <title>Deploying and Configuring Infrastructure on Azure</title>
      <link>https://timblog.z19.web.core.windows.net/posts/azure-deploying-config-infrastructure/</link>
      <pubDate>Sat, 19 Oct 2019 10:39:40 -0400</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/azure-deploying-config-infrastructure/</guid>
      <description>After passing the AZ-900 exam to earn my Azure Fundamentals certificate, I thought I would move on to earning my Azure Solutions Architect Expert certification as well. This requires passing two exams: the AZ-300: Microsoft Azure Architect Technologies and the AZ-301 Microsoft Azure Architect Design.
These are my notes about Deploying and Configuring Infrastructure, part of the AZ-300 exam.
Monitoring Azure Monitor provides tools to collect and analyze telemetry data to help you manage the performance and availability of your resources and applications.</description>
    </item>
    
    <item>
      <title>Azure Fundamentals</title>
      <link>https://timblog.z19.web.core.windows.net/posts/azure-fundamentals/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/azure-fundamentals/</guid>
      <description>I have decided to purse some Azure certifications to improve my understanding of Microsoft Azure and demonstrate some expertise. I generally like to start these types of efforts at the beginning, which means revisiting the fundamentals to ensure I have a good foundation. So, for this particular journey that means starting with an Azure Fundamentals certification by taking the AZ-900 exam. To keep it interesting, I though I might take notes on the process here as I prepare for and take the exam.</description>
    </item>
    
    <item>
      <title>API Versioning in ASP.NET Core</title>
      <link>https://timblog.z19.web.core.windows.net/posts/api-ver/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/api-ver/</guid>
      <description>Versioning is an important aspect of API design and implementation. We want to be able change our service and add new features while still providing a stable API that our users can consume. To that end I recently spent a little time with Microsoft&amp;rsquo;s aspnet-api-versioning library to learn how it provides an easy way to add different versioning semantics to your API project.
These libraries are really easy to get started with and there are a handful of useful samples here.</description>
    </item>
    
    <item>
      <title>How to build your static site with Hugo</title>
      <link>https://timblog.z19.web.core.windows.net/posts/azure-hugo/</link>
      <pubDate>Mon, 15 Jul 2019 20:38:49 -0400</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/azure-hugo/</guid>
      <description>In a pair of previous posts I described how to host a static site in Azure storage and also how to use a CDN to map a custom domain to your site with https. For each of those examples I used a simple &amp;lsquo;hello world&amp;rsquo; html page, but in the real world we are going to want more out of our site. In my research I came across Hugo and decided to give it a go.</description>
    </item>
    
    <item>
      <title>How to use a custom domain with your Azure static site</title>
      <link>https://timblog.z19.web.core.windows.net/posts/azure-cdn/</link>
      <pubDate>Fri, 12 Jul 2019 22:29:16 -0400</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/azure-cdn/</guid>
      <description>In a previous post we looked at how to host your static site in azure blog storage. We stopped with a simple &amp;lsquo;hello world&amp;rsquo; page.
Unfortunately the default address for you site will be in the somewhat undesirable format ..web.core.windows.net. For this blog that is: https://timblog.z19.web.core.windows.net/. Obviously, we might to use a domain we already own. Fortunately, there are some options for this.
We will use an Azure CDN to configure our custom domain endpoint.</description>
    </item>
    
    <item>
      <title>How to host your website on Azure</title>
      <link>https://timblog.z19.web.core.windows.net/posts/azure-site/</link>
      <pubDate>Fri, 05 Jul 2019 11:53:20 -0400</pubDate>
      
      <guid>https://timblog.z19.web.core.windows.net/posts/azure-site/</guid>
      <description>One useful feature of Microsoft Azure that has recently achieved general availability is the ability to host static websites in Azure storage. This blog is an example of such a site, so I thought I might put together a series of posts describing how I built and hosted it. This first installment will cover setting up a simple site in Azure.
I will assume that you already have a Microsoft Azure subscription, but if not you can get started with a free account here: Microsoft Azure Free Account</description>
    </item>
    
  </channel>
</rss>